name: Databricks CI/CD Pipeline

on:
  pull_request:
    branches: [main]
    paths-ignore:
      - '**.md'
      - 'docs/**'
  push:
    branches: [main]
    paths-ignore:
      - '**.md'
      - 'docs/**'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - test
          - prod

# Global env vars removed - set per job instead

jobs:
  # Skip validation if secrets are not available
  check-secrets:
    name: Check Secrets Availability
    runs-on: ubuntu-latest
    outputs:
      secrets-available: ${{ steps.check.outputs.available }}
    steps:
      - id: check
        run: |
          if [[ "${{ secrets.DATABRICKS_DEV_HOST }}" != "" ]] && [[ "${{ secrets.DATABRICKS_DEV_TOKEN }}" != "" ]]; then
            echo "available=true" >> $GITHUB_OUTPUT
          else
            echo "available=false" >> $GITHUB_OUTPUT
            echo "::warning::Databricks secrets not available. Please add DATABRICKS_DEV_HOST and DATABRICKS_DEV_TOKEN as repository secrets."
          fi

  validate:
    name: Validate Databricks Bundle
    runs-on: ubuntu-latest
    needs: check-secrets
    if: needs.check-secrets.outputs.secrets-available == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Databricks CLI
        run: |
          curl -fsSL https://raw.githubusercontent.com/databricks/setup-cli/main/install.sh | sh
          echo "/home/runner/.databricks/bin" >> $GITHUB_PATH

      - name: Debug authentication
        run: |
          echo "Checking if secrets are set..."
          echo "Event name: ${{ github.event_name }}"
          echo "Actor: ${{ github.actor }}"
          echo "DATABRICKS_DEV_HOST is set: ${{ secrets.DATABRICKS_DEV_HOST != '' }}"
          echo "DATABRICKS_DEV_TOKEN is set: ${{ secrets.DATABRICKS_DEV_TOKEN != '' }}"
          echo "Environment: ${{ job.environment }}"
          
      - name: Validate bundle configuration
        working-directory: src
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_DEV_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_DEV_TOKEN }}
        run: |
          # Debug: Check if environment variables are set
          if [ -z "$DATABRICKS_HOST" ]; then
            echo "ERROR: DATABRICKS_HOST is not set!"
            echo "Please add DATABRICKS_DEV_HOST secret to your repository"
            exit 1
          fi
          if [ -z "$DATABRICKS_TOKEN" ]; then
            echo "ERROR: DATABRICKS_TOKEN is not set!"
            echo "Please add DATABRICKS_DEV_TOKEN secret to your repository"
            exit 1
          fi
          
          echo "Host is configured: ${DATABRICKS_HOST}"
          databricks bundle validate --target dev

  deploy-dev:
    name: Deploy to Development
    runs-on: ubuntu-latest
    needs: validate
    if: |
      (github.event_name == 'pull_request' && 
       (startsWith(github.head_ref, 'feature/') || 
        startsWith(github.head_ref, 'fix/') || 
        startsWith(github.head_ref, 'chore/'))) ||
      (github.event_name == 'workflow_dispatch' && 
       github.event.inputs.environment == 'dev')
    environment: dev
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Databricks CLI
        run: |
          curl -fsSL https://raw.githubusercontent.com/databricks/setup-cli/main/install.sh | sh
          echo "/home/runner/.databricks/bin" >> $GITHUB_PATH

      - name: Deploy to Dev Environment
        working-directory: src
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_DEV_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_DEV_TOKEN }}
        run: |
          databricks bundle deploy --target dev

      - name: Run Dev Tests
        working-directory: src
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_DEV_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_DEV_TOKEN }}
        run: |
          databricks bundle run --target dev validation_job || true

  deploy-test:
    name: Deploy to Test
    runs-on: ubuntu-latest
    needs: deploy-dev
    if: |
      (github.event_name == 'push' && github.ref == 'refs/heads/main') ||
      (github.event_name == 'workflow_dispatch' && 
       github.event.inputs.environment == 'test')
    environment: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Databricks CLI
        run: |
          curl -fsSL https://raw.githubusercontent.com/databricks/setup-cli/main/install.sh | sh
          echo "/home/runner/.databricks/bin" >> $GITHUB_PATH

      - name: Deploy to Test Environment
        working-directory: src
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_TEST_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TEST_TOKEN }}
        run: |
          databricks bundle deploy --target test

      - name: Run Test Suite
        working-directory: src
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_TEST_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TEST_TOKEN }}
        run: |
          databricks bundle run --target test test_job || true

  deploy-prod:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: deploy-test
    if: |
      (github.event_name == 'push' && github.ref == 'refs/heads/main') ||
      (github.event_name == 'workflow_dispatch' && 
       github.event.inputs.environment == 'prod')
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Databricks CLI
        run: |
          curl -fsSL https://raw.githubusercontent.com/databricks/setup-cli/main/install.sh | sh
          echo "/home/runner/.databricks/bin" >> $GITHUB_PATH

      - name: Deploy to Production Environment
        working-directory: src
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_PROD_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_PROD_TOKEN }}
        run: |
          databricks bundle deploy --target prod

      - name: Run Production Smoke Tests
        working-directory: src
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_PROD_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_PROD_TOKEN }}
        run: |
          databricks bundle run --target prod smoke_test_job || true