name: Commitlint

on: 
  push:
    branches: [main, 'feature/**', 'fix/**', 'chore/**']
  pull_request:
    branches: [main]

jobs:
  commitlint:
    name: Validate Commit Messages
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install commitlint
        run: |
          npm install --save-dev @commitlint/config-conventional @commitlint/cli

      - name: Validate current commit (for push)
        if: github.event_name == 'push'
        run: echo "${{ github.event.head_commit.message }}" | npx commitlint

      - name: Validate PR commits (for pull_request)
        if: github.event_name == 'pull_request'
        run: npx commitlint --from ${{ github.event.pull_request.base.sha }} --to ${{ github.event.pull_request.head.sha }} --verbose

      - name: Comment on PR with guidelines (on failure)
        if: failure() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const commentBody = "## Commit Message Validation Failed\n\n" +
              "Your commit messages don't follow conventional commit standards.\n\n" +
              "### Required Format:\n" +
              "`<type>: <description>`\n\n" +
              "### Valid Types:\n" +
              "- feat: New feature\n" +
              "- fix: Bug fix\n" +
              "- docs: Documentation\n" +
              "- chore: Maintenance\n\n" +
              "### Examples:\n" +
              "`feat: add data pipeline`\n" +
              "`fix: resolve validation error`\n\n" +
              "Please update your commit messages and force push.";
              
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: commentBody
            });